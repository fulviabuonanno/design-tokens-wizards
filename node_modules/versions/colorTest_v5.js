const fs = require("fs");
const tinycolor = require("tinycolor2");
const readline = require("readline");

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

rl.question("Enter HEX colors separated by commas: ", (input) => {
  const colors = input.split(",").map(hex => hex.trim());
  const colorTokens = {};

  colors.forEach(hex => {
    const color = tinycolor(hex);
    colorTokens[hex] = {
      formats: {
        RGB: color.toRgbString(),
        RGBA: color.setAlpha(0.5).toRgbString(),
        HSL: color.toHslString(),
        HEX: color.toHexString()
      },
      stops: {}
    };

    // Create stops in all formats manually
    const stopNames = ['Lightest', 'Lighter', 'Light', 'Dark', 'Darker', 'Darkest'];
    stopNames.forEach(stopName => {
      let stopColor;
      
      switch (stopName) {
        case 'Lightest':
          stopColor = color.lighten(40);
          break;
        case 'Lighter':
          stopColor = color.lighten(30);
          break;
        case 'Light':
          stopColor = color.lighten(20);
          break;
        case 'Dark':
          stopColor = color.darken(20);
          break;
        case 'Darker':
          stopColor = color.darken(30);
          break;
        case 'Darkest':
          stopColor = color.darken(40);
          break;
        default:
          stopColor = color;
      }

      colorTokens[hex].stops[stopName] = {
        RGB: stopColor.toRgbString(),
        RGBA: stopColor.setAlpha(0.5).toRgbString(),
        HSL: stopColor.toHslString(),
        HEX: stopColor.toHexString()
      };
    });
  });

  // Write to a JSON file
  fs.writeFileSync("tokens.json", JSON.stringify(colorTokens, null, 2));
  console.log("Color data has been saved to tokens.json");
  rl.close();
});
