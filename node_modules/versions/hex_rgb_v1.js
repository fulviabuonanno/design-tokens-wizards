const tinycolor = require("tinycolor2");
const fs = require("fs");
const readline = require("readline");

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// Función para pedir el color HEX y el nombre
const askForInput = () => {
  return new Promise((resolve) => {
    rl.question("Enter a HEX color (e.g. #FABADA): ", (hex) => {
      // Validar que el color HEX sea correcto
      if (!tinycolor(hex).isValid()) {
        console.log(`The HEX color "${hex}" is not valid. Please try again.`);
        rl.close();
        return;
      }
      
      rl.question("Enter a name for the color (e.g. color-brand-primary): ", (name) => {
        // Validación del nombre: solo letras, números, guiones y puntos
        const isValidName = /^[a-zA-Z0-9.-]+$/.test(name);
        if (!isValidName) {
          console.log("The color name can only contain letters, numbers, hyphens (-), and dots (.).");
          rl.close();
          return;
        }

        resolve({ hex: hex.trim(), name: name.trim() });
      });
    });
  });
};

// Función principal
const main = async () => {
  const { hex, name } = await askForInput();  // Pedir el color HEX y el nombre
  const color = tinycolor(hex);

  // Convertir a RGB
  const rgb = color.toRgbString();

  // Crear el objeto de datos para output_color
  const colorData = { name: name, HEX: hex, RGB: rgb };

  // Guardar el archivo output_color.json
  const outputColorFilename = "output_color.json";
  fs.writeFileSync(outputColorFilename, JSON.stringify(colorData, null, 2));
  console.log(`Color data saved as ${outputColorFilename}`);

  // Crear el objeto de datos para tokens.json (Tokens Studio format)
  const tokensData = {
    color: {
      brand: {
        primary: {
          value: hex,
          type: "color"
        }
      }
    }
  };

  // Guardar el archivo tokens.json
  const tokensFilename = "tokens.json";
  fs.writeFileSync(tokensFilename, JSON.stringify(tokensData, null, 2));
  console.log(`Tokens Studio data saved as ${tokensFilename}`);

  console.log(`HEX color: ${hex}`);
  console.log(`Converted to RGB: ${rgb}`);
  rl.close();
};

main();
